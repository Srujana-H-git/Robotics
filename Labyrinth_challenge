#pragma config(Motor,  motorA,          left,          tmotorNXT, PIDControl, encoder)
#pragma config(Motor,  motorB,          right,         tmotorNXT, PIDControl, encoder)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

float enc(float l)
{
	nMotorEncoder[left]=0;
	nMotorEncoder[right]=0;
	float c=17.27,count , t;
	t=l/c;
	count=t*360;
  return count;
}

float enct(int theta)
{
	nMotorEncoder[left]=0;
	nMotorEncoder[right]=0;
	float c=17.27,coun,r=14.5,s, t;
	s=r*theta*(3.145/180);
	t=s/c;
	coun =t*360;
  return coun;
}
void stop_robot()
{
	motor[left]=0;
	motor[right]=0;
	wait1Msec(10);
}

void fwd(float coun)
{
	while(nMotorEncoder[left]<coun && nMotorEncoder[right]<coun)
		{
			motor[left]=55;
			motor[right]=55;
}
stop_robot();
}

void pleft_turn(float coun)
{
	while(nMotorEncoder[right]<coun)
		{
			motor[left]=0;
			motor[right]=50;
		}

	stop_robot();
}

void pright_turn(float coun)

{
	while(nMotorEncoder[left]<coun)
	{
		motor[left]=50;
		motor[right]=0;
	}
stop_robot();
}


task main()
{
 fwd(enc(53.5));
 pleft_turn(enct(90));
 fwd(enc(47));
 pright_turn(enct(90));
 fwd(enc(23));
 pright_turn(enct(90));
 fwd(enc(27));
}
