#pragma config(Sensor, S1,     light,          sensorLightActive)
#pragma config(Motor,  motorA,          left,          tmotorNXT, PIDControl, reversed, encoder)
#pragma config(Motor,  motorB,          right,         tmotorNXT, PIDControl, reversed, encoder)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

void clren(){
	nMotorEncoder[left]=0;
	nMotorEncoder[right]=0;
}
void fwd(){
	motor[left]=35;
	motor[right]=35;
}
void stoprobot(){
	motor[left]=0;
	motor[right]=0;
}

void sleft(float theta)
{
	float c=17.27;
	float t,s,count;
	float R=14.5;
  s=R*theta*(3.1415/180);
  t=s/c;
  count = t*360;
	clren();
	while(nMotorEncoder[left]<count)
	{
		motor[left]=30;
		motor[right]=0;
	}
	stoprobot();
}

void sright(float theta)
{
	float c=17.27;
	float t,s,count;
	float R=14.5;
  s=R*theta*(3.1415/180);
  t=s/c;
  count = t*360;
	clren();
	while(nMotorEncoder[right]<count)
	{
		motor[left]=0;
		motor[right]=30;
	}
	stoprobot();
}

task main()
{
float t=60,i=1,k=0;
while(k<8)
{
	while(SensorValue(light)>t)
{
	fwd();
}
stoprobot();
if(k<7)
{

if(i%2!=0){
	sright(180);
}
else{
	sleft(180);
}
i=i+1;
k=k+1;
}
}
stoprobot();
}